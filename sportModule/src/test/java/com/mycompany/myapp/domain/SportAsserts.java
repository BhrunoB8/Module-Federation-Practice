package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SportAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSportAllPropertiesEquals(Sport expected, Sport actual) {
        assertSportAutoGeneratedPropertiesEquals(expected, actual);
        assertSportAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSportAllUpdatablePropertiesEquals(Sport expected, Sport actual) {
        assertSportUpdatableFieldsEquals(expected, actual);
        assertSportUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSportAutoGeneratedPropertiesEquals(Sport expected, Sport actual) {
        assertThat(actual)
            .as("Verify Sport auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSportUpdatableFieldsEquals(Sport expected, Sport actual) {
        assertThat(actual)
            .as("Verify Sport relevant properties")
            .satisfies(a -> assertThat(a.getTitle()).as("check title").isEqualTo(expected.getTitle()))
            .satisfies(a -> assertThat(a.getDescription()).as("check description").isEqualTo(expected.getDescription()))
            .satisfies(a -> assertThat(a.getAuthor()).as("check author").isEqualTo(expected.getAuthor()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSportUpdatableRelationshipsEquals(Sport expected, Sport actual) {
        // empty method
    }
}
